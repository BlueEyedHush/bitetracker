'use strict';

export default class BaseDao {
  constructor(db, name) {
    /* Promise, which resolves to the collection that this dao is responsible for */
    this.collectionOpener = () => db.collection(name);
    this.collection = Promise.resolve(this.collectionOpener());
  }

  /**
   * returns Promise which resolves to collection, with which this DAO is associated
   */
  getCollection() {
    return this.collection;
  }

  clean() {
    /* this may seem weired, but I'm fairly sure that this descriptor can be reused without problems,
     * even after dropping the collection - next connection'll simply create a new one */
    this.collection = this.collection
      .then(c => c.drop())
      .then(() => this.collectionOpener());
  }
};
