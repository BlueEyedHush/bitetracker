import alt from 'alt-instance'

import GroceryListActions from 'actions/GroceryListActions'
import GroceryListSource from 'sources/GroceryListSource'

class GroceryListStore {
  constructor() {
    this.lists = [];
    this.err = null;

    let { FETCH_LISTS, FETCH_SUCCESS, FETCH_FAILURE, ADD_LIST, REMOVE_LIST, ADD_ITEM, REMOVE_ITEM, TOGGLE_ITEM } = GroceryListActions;

    this.bindListeners({
      handleFetchLists:   FETCH_LISTS,
      handleFetchSuccess: FETCH_SUCCESS,
      handleFetchFailed:  FETCH_FAILURE,
      handleAddList:      ADD_LIST,
      handleRemoveList:   REMOVE_LIST,
      handleAddItem:      ADD_ITEM,
      handleRemoveItem:   REMOVE_ITEM,
      handleToggleItem:   TOGGLE_ITEM
    });
  }

  _getListIndex(listId) {
    return this.lists.findIndex(list => list._id === listId);
  }

  _updateList(listId, func) {
    let index = this._getListIndex(listId);
    let lists = this.lists.slice(0);
    lists.splice(index, 1, func(this.lists[index]));
    this.setState({ lists });
  }

  handleFetchLists() {
    GroceryListSource
        .fetch()
        .then(GroceryListActions.fetchSuccess)
        .catch(GroceryListActions.fetchFailure);
  }

  handleFetchSuccess(lists) {
    this.setState({ lists, err: null });
  }

  handleFetchFailed(err) {
    this.setState({ err });
  }

  handleAddList(list) {
    this.setState({ lists: this.lists.concat([list]) });
  }

  handleRemoveList(listId) {
    this.setState({ lists: this.lists.filter(item => item._id !== listId)});
  }

  handleAddItem({ listId, item }) {
    this._updateList(listId, list => {
      list.items = list.items.concat([item]);
      return list;
    });
  }

  handleRemoveItem({ listId, itemId }) {
    this._updateList(listId, list => {
      list.items = list.items.filter(item => item._id !== itemId);
      return list;
    });
  }

  handleToggleItem({ listId, itemId }) {
    this._updateList(listId, list => {
      let item = list.items.find(item => item._id === itemId);
      item.completed = !item.completed;
      return list;
    });
  }
}

export default alt.createStore(GroceryListStore, 'GroceryListStore');
