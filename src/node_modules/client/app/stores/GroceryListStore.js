import alt from 'alt-instance'

import GroceryListActions from 'actions/GroceryListActions'
import GroceryListSource from 'sources/GroceryListSource'

class GroceryListStore {
  constructor() {
    this.lists = [];
    this.err = null;

    this.bindListeners({
      handleFetchLists: GroceryListActions.FETCH_LISTS,
      handleFetchSuccess: GroceryListActions.FETCH_SUCCESS,
      handleFetchFailed: GroceryListActions.FETCH_FAILURE,
      handleAddList: GroceryListActions.ADD_LIST,
      handleRemoveList: GroceryListActions.REMOVE_LIST,
      handleAddItem: GroceryListActions.ADD_ITEM,
      handleRemoveItem: GroceryListActions.REMOVE_ITEM,
      handleToggleItem: GroceryListActions.TOGGLE_ITEM,
    });
  }

  _getListIndex(listId) {
    return this.lists.findIndex(list => list._id === listId);
  }

  _updateList(listId, func) {
    let index = this._getListIndex(listId);
    let lists = this.lists.slice(0);
    lists.splice(index, 1, func(this.lists[index]));
    this.setState({lists});
  }

  handleFetchLists() {
    GroceryListSource
      .fetch()
      .then(GroceryListActions.fetchSuccess)
      .catch(GroceryListActions.fetchFailure);
  }

  handleFetchSuccess(lists) {
    this.setState({lists, err: null});
  }

  handleFetchFailed(err) {
    this.setState({err});
  }

  handleAddList(list) {
    this.setState({lists: this.lists.concat([list])});
  }

  handleRemoveList(listId) {
    this.setState({lists: this.lists.filter(item => item._id !== listId)});
  }

  handleAddItem({listId, item}) {
    this._updateList(listId, list => {
      list.items = list.items.concat([item]);
      return list;
    });
  }

  handleRemoveItem({listId, itemId}) {
    this._updateList(listId, list => {
      list.items = list.items.filter(item => item._id !== itemId);
      return list;
    });
  }

  handleToggleItem({listId, itemId}) {
    this._updateList(listId, list => {
      let item = list.items.find(item => item._id === itemId);
      item.completed = !item.completed;
      return list;
    });
  }
}

export default alt.createStore(GroceryListStore, 'GroceryListStore');
